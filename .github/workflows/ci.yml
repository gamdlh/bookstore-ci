name: CI with Docker Compose

on:
    pull_request:
        branches:
            - main
    push:
        branches:
            - main

jobs:
    test:
        runs-on: ubuntu-latest
        
        steps:
          - name: Setup PostgreSQL with PostgreSQL extensions and unprivileged user
          # You may pin to the exact commit or the version.
          # uses: Daniel-Marynicz/postgresql-action@79215751c10f38d037032a85feebba06c1c13968
            uses: Daniel-Marynicz/postgresql-action@1.0.0
            with:
            # Docker postgres image tag for available image tags please see https://hub.docker.com/_/postgres
              postgres_image_tag: 13 # optional, default is latest
              # APP_USER - unprivileged postgres user
              app_user: fastapi_user # optional, default is app
              # APP_PASSWORD_USER - password for unprivileged postgres user
              app_user_password: secret_password # optional, default is app
              # APP_DB - database or list of databases separated by space for unprivileged postgres user
              app_db: fastapi_db 
            # Step 1: Check out the code
          
          - name: Checkout repository
            uses: actions/checkout@v3
            
            #Step 2: Set up Docker Compose
          - name: Start services with Docker Compose
            run: docker compose up --build --abort-on-container-exit
            
            #Step 3: Tear down services
          - name: Stop and clean up Docker Compose
            if: always()
            run: docker compose down